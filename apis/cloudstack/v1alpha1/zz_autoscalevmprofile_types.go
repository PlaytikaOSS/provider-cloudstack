// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoscaleVmProfileInitParameters struct {

	// A time interval to wait for graceful
	// shutdown of instances.
	DestroyVMGracePeriod *string `json:"destroyVmGracePeriod,omitempty" tf:"destroy_vm_grace_period,omitempty"`

	// A mapping of metadata key/values to assign to the
	// resource.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// A mapping of additional params used when
	// creating new instances.
	// +mapType=granular
	OtherDeployParams map[string]*string `json:"otherDeployParams,omitempty" tf:"other_deploy_params,omitempty"`

	// The name or ID of the service offering used
	// for instances. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/playtika/provider-cloudstack/apis/cloudstack/v1alpha1.ServiceOffering
	ServiceOffering *string `json:"serviceOffering,omitempty" tf:"service_offering,omitempty"`

	// Reference to a ServiceOffering in cloudstack to populate serviceOffering.
	// +kubebuilder:validation:Optional
	ServiceOfferingRef *v1.Reference `json:"serviceOfferingRef,omitempty" tf:"-"`

	// Selector for a ServiceOffering in cloudstack to populate serviceOffering.
	// +kubebuilder:validation:Optional
	ServiceOfferingSelector *v1.Selector `json:"serviceOfferingSelector,omitempty" tf:"-"`

	// The name or ID of the template used for instances.
	// +crossplane:generate:reference:type=github.com/playtika/provider-cloudstack/apis/cloudstack/v1alpha1.Template
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// Reference to a Template in cloudstack to populate template.
	// +kubebuilder:validation:Optional
	TemplateRef *v1.Reference `json:"templateRef,omitempty" tf:"-"`

	// Selector for a Template in cloudstack to populate template.
	// +kubebuilder:validation:Optional
	TemplateSelector *v1.Selector `json:"templateSelector,omitempty" tf:"-"`

	// The name or ID of the zone where instances will be
	// created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/playtika/provider-cloudstack/apis/cloudstack/v1alpha1.Zone
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`

	// Reference to a Zone in cloudstack to populate zone.
	// +kubebuilder:validation:Optional
	ZoneRef *v1.Reference `json:"zoneRef,omitempty" tf:"-"`

	// Selector for a Zone in cloudstack to populate zone.
	// +kubebuilder:validation:Optional
	ZoneSelector *v1.Selector `json:"zoneSelector,omitempty" tf:"-"`
}

type AutoscaleVmProfileObservation struct {

	// A time interval to wait for graceful
	// shutdown of instances.
	DestroyVMGracePeriod *string `json:"destroyVmGracePeriod,omitempty" tf:"destroy_vm_grace_period,omitempty"`

	// The autoscale VM profile ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A mapping of metadata key/values to assign to the
	// resource.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// A mapping of additional params used when
	// creating new instances.
	// +mapType=granular
	OtherDeployParams map[string]*string `json:"otherDeployParams,omitempty" tf:"other_deploy_params,omitempty"`

	// The name or ID of the service offering used
	// for instances. Changing this forces a new resource to be created.
	ServiceOffering *string `json:"serviceOffering,omitempty" tf:"service_offering,omitempty"`

	// The name or ID of the template used for instances.
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// The name or ID of the zone where instances will be
	// created. Changing this forces a new resource to be created.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type AutoscaleVmProfileParameters struct {

	// A time interval to wait for graceful
	// shutdown of instances.
	// +kubebuilder:validation:Optional
	DestroyVMGracePeriod *string `json:"destroyVmGracePeriod,omitempty" tf:"destroy_vm_grace_period,omitempty"`

	// A mapping of metadata key/values to assign to the
	// resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// A mapping of additional params used when
	// creating new instances.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	OtherDeployParams map[string]*string `json:"otherDeployParams,omitempty" tf:"other_deploy_params,omitempty"`

	// The name or ID of the service offering used
	// for instances. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/playtika/provider-cloudstack/apis/cloudstack/v1alpha1.ServiceOffering
	// +kubebuilder:validation:Optional
	ServiceOffering *string `json:"serviceOffering,omitempty" tf:"service_offering,omitempty"`

	// Reference to a ServiceOffering in cloudstack to populate serviceOffering.
	// +kubebuilder:validation:Optional
	ServiceOfferingRef *v1.Reference `json:"serviceOfferingRef,omitempty" tf:"-"`

	// Selector for a ServiceOffering in cloudstack to populate serviceOffering.
	// +kubebuilder:validation:Optional
	ServiceOfferingSelector *v1.Selector `json:"serviceOfferingSelector,omitempty" tf:"-"`

	// The name or ID of the template used for instances.
	// +crossplane:generate:reference:type=github.com/playtika/provider-cloudstack/apis/cloudstack/v1alpha1.Template
	// +kubebuilder:validation:Optional
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// Reference to a Template in cloudstack to populate template.
	// +kubebuilder:validation:Optional
	TemplateRef *v1.Reference `json:"templateRef,omitempty" tf:"-"`

	// Selector for a Template in cloudstack to populate template.
	// +kubebuilder:validation:Optional
	TemplateSelector *v1.Selector `json:"templateSelector,omitempty" tf:"-"`

	// The name or ID of the zone where instances will be
	// created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/playtika/provider-cloudstack/apis/cloudstack/v1alpha1.Zone
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`

	// Reference to a Zone in cloudstack to populate zone.
	// +kubebuilder:validation:Optional
	ZoneRef *v1.Reference `json:"zoneRef,omitempty" tf:"-"`

	// Selector for a Zone in cloudstack to populate zone.
	// +kubebuilder:validation:Optional
	ZoneSelector *v1.Selector `json:"zoneSelector,omitempty" tf:"-"`
}

// AutoscaleVmProfileSpec defines the desired state of AutoscaleVmProfile
type AutoscaleVmProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutoscaleVmProfileParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutoscaleVmProfileInitParameters `json:"initProvider,omitempty"`
}

// AutoscaleVmProfileStatus defines the observed state of AutoscaleVmProfile.
type AutoscaleVmProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutoscaleVmProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AutoscaleVmProfile is the Schema for the AutoscaleVmProfiles API. Creates an autoscale VM profile.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudstack}
type AutoscaleVmProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutoscaleVmProfileSpec   `json:"spec"`
	Status            AutoscaleVmProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutoscaleVmProfileList contains a list of AutoscaleVmProfiles
type AutoscaleVmProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutoscaleVmProfile `json:"items"`
}

// Repository type metadata.
var (
	AutoscaleVmProfile_Kind             = "AutoscaleVmProfile"
	AutoscaleVmProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AutoscaleVmProfile_Kind}.String()
	AutoscaleVmProfile_KindAPIVersion   = AutoscaleVmProfile_Kind + "." + CRDGroupVersion.String()
	AutoscaleVmProfile_GroupVersionKind = CRDGroupVersion.WithKind(AutoscaleVmProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&AutoscaleVmProfile{}, &AutoscaleVmProfileList{})
}
